---
## Check if docker is instaled and started
- name: Make sure the Docker Engine is running
  service:
    name: "docker"
    state: "started"
## Get informations about docker 
- name: Get docker Informations and register them in docker_info variable
  command: "docker info"
  register: "docker_info"
  changed_when: false
## Initialise Docker Swarm only if: 
# 1. Swarm is not yet activate
# 2. The inventory hostname (it's a magic variable: to know more about magic variables, please read 
#    the Basics section or visit the following link: https://docs.ansible.com/ansible/latest/user_guide/playbooks_vars_facts.html#vars-and-facts) 
- name: Init Docker Swarm Mode On the main Manager
  command: >
          docker swarm init
          --listen-addr {{ docker_swarm_addr }}:{{ docker_swarm_port }}
          --advertise-addr {{ docker_swarm_addr }}
  when: >
        'Swarm: inactive' in docker_info.stdout and
        inventory_hostname == docker_swarm_primary_manager
## Capture the Swarm token to add Workers, only if:
#   - The current machine is the principal manager. In this case (inventory_hostname == manager1)   
- name: Capture the Docker Swarm Worker Join Token
  command: "docker swarm join-token -q worker"
  changed_when: false
  register: "docker_swarm_worker_token"
  when: >
        inventory_hostname == docker_swarm_primary_manager
## Capture the Swarm token to add other Managers, only if:
#   - The current machine is the principal manager. In this case (inventory_hostname == manager1)  
- name: Capture the Docker Swarm Manager join token
  command: "docker swarm join-token -q manager"
  changed_when: false
  register: "docker_swarm_manager_token"
  when: >
        inventory_hostname == docker_swarm_primary_manager
## Sometimes is the file not replaced and the old token will be keeped. 
#  To avoid this problem, the token manager file will be deleted
- name: Delete manager token file
  file:
    path: /ansible_prov/tokens/manager-token
    state: absent
  when: >
        inventory_hostname == docker_swarm_primary_manager
## Sometimes is the file not replaced and the old token will be keeped. 
#  To avoid this problem, the token worker file will be deleted
- name: Delete worker token file
  file:
    path: /ansible_prov/tokens/worker-token
    state: absent
  when: >
        inventory_hostname == docker_swarm_primary_manager
## The main manager IP address is always required to add a new manager or worker.
## Sometimes the file is not replaced and the old IP Address is retained
#  To avoid this problem we delete the manager IP Address file
- name: Delete ip address manager file
  file:
    path: /ansible_prov/tokens/manager-address-token
    state: absent
  when: >
        inventory_hostname == docker_swarm_primary_manager
## If the current computer is the main manager, we register the token that is used to add new workers
#  to the swarm 
- name: Register the swarm worker token
  lineinfile:
    path: /ansible_prov/tokens/worker-token
    line: "{{ docker_swarm_worker_token.stdout }}"
    create: yes
  when: >
        inventory_hostname == docker_swarm_primary_manager
## If the current computer is the main manager, we register the token that is used to add new managers
#  to the swarm
- name: Register the swarm manager token
  lineinfile:
    path: /ansible_prov/tokens/manager-token
    line: "{{ docker_swarm_manager_token.stdout }}"
    create: yes
  when: >
        inventory_hostname == docker_swarm_primary_manager
## The main manager IP Address is always required to add a new manager or worker.
## When we are in the main manager (in this case manager1), we register the IP address
- name: Register the IP address of the main Manager
  lineinfile:
    path: /ansible_prov/tokens/manager-address-token
    line: "{{ docker_swarm_addr }}:{{ docker_swarm_port }}"
    create: yes
  when: >
        inventory_hostname == docker_swarm_primary_manager
## set_fact: Facts contain all informations about the current machine, we add the manager_token 
#  as a fact, to read more about Facts, please read 
#  the Basics section or visit the following link: 
#  https://docs.ansible.com/ansible/latest/user_guide/playbooks_vars_facts.html#vars-and-facts 

## set_fact: facts contain all informations about the current computer, with set_fact we can add the manager_token to it.
#  To learn more about facts, please read the Basics section or visit the link below:
#  https://docs.ansible.com/ansible/latest/user_guide/playbooks_vars_facts.html#vars-and-facts
- name: Defining Manager Token Fact
  set_fact:
    manager_token: "{{ lookup('file', '../../../../tokens/manager-token') }}"
## Add the worker token as a fact to the current host's fact list
- name: docker_swarm | Defining Worker Token Fact
  set_fact:
    worker_token: "{{ lookup('file', '../../../../tokens/worker-token') }}"
## Add the main manager's IP address as a fact to the current host's fact list
- name: Defining Manager IP Address Fact
  set_fact:
    manager_address: "{{ lookup('file', '../../../../tokens/manager-address-token') }}"
## Join new manager only if:
#    1. The current host is not the main manager
#    2. inventory_hostname fact contains manager word (is a manager, not a worker)
- name: Adding additional Docker Swarm managers to the cluster
  command: >
          docker swarm join
          --token {{ hostvars[inventory_hostname]['manager_token']}}
          {{ hostvars[inventory_hostname]['manager_address'] }}
  when: >
        inventory_hostname != docker_swarm_primary_manager and
        "manager" in inventory_hostname
## Join worker to the swarm, only if:
# 1. current host is not the main manager
# 2. inventory_host contains worker word (is a worker and not a manager) 
- name: Adding additional Docker Swarm workers to the cluster
  command: >
          docker swarm join
          --token {{ hostvars[inventory_hostname]['worker_token']}}
          {{ hostvars[inventory_hostname]['manager_address'] }}
  when: >
        inventory_hostname != docker_swarm_primary_manager and
        "worker" in inventory_hostname