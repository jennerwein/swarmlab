########################################################################
#     Import variables from the configuration file
########################################################################
configFile='./config.yml'
# In Ruby we need this YAML module to serialize a Yaml string
require 'yaml'
getVar = YAML.load_file(configFile) 

NUMBER_OF_MANAGERS=getVar['NUMBER_OF_MANAGERS']
NUMBER_OF_WORKERS=getVar['NUMBER_OF_WORKERS']
MEMORY_MANAGER=getVar['MEMORY_MANAGER']
NUMBER_CPUS_MANAGER=getVar['NUMBER_CPUS_MANAGER']
MANAGER_WORKER_IPV4=getVar['MANAGER_WORKER_IPV4']
BEGINN_MANAGER_WORKER_IPV4 = MANAGER_WORKER_IPV4.split('.')[0...-1].join('.')
MEMORY_WORKER=getVar['MEMORY_WORKER']
NUMBER_CPUS_WORKER=getVar['NUMBER_CPUS_WORKER']
VAGRANTFILE_API_VERSION = getVar['VAGRANTFILE_API_VERSION']

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = getVar['VM_BOX']
  config.vm.box_version = getVar['BOX_VERSION']
  config.vm.provider 'virtualbox' do |v|
    # Linked clone is supported from version 1.8.0.
    # For more informations refer to the the following link:
    # https://www.vagrantup.com/docs/providers/virtualbox/configuration.html#linked-clones
    v.linked_clone = true if Gem::Version.new(Vagrant::VERSION) >= Gem::Version.new('1.8.0')
  end
  
  ########################################################################
  #     Create the first manager, the principal Manager where Swarm 
  #     will be initialized  
  ########################################################################
  config.vm.define "manager1" do |node|
    # Define the hostname
    node.vm.hostname = "manager1"
    node.vm.network "private_network", ip: BEGINN_MANAGER_WORKER_IPV4 + "." + "#{99+mgrNumber}"
  end

  ########################################################################
  #       Add other managers: Manager 2, Manager 3 ...    
  ########################################################################
  (2..NUMBER_OF_MANAGERS).each do |mgrNumber|
    _MANAGER_NAME = "manager#{mgrNumber}"
    config.vm.define _MANAGER_NAME do |node|
      # Define the hostname
      node.vm.hostname = _MANAGER_NAME
      node.vm.network "private_network", ip: BEGINN_MANAGER_WORKER_IPV4 + "." + "#{99+mgrNumber}"
    end
  end  
  # 
  ########################################################################
  #  Create Worker machines: worker1, worker2, worker3 ...
  ########################################################################
  (1..NUMBER_OF_WORKERS).each do |workerNumber|
    _WORKER_NAME = "worker#{workerNumber}"
    config.vm.define _WORKER_NAME do |node|
      # Define the hostname
      node.vm.hostname = _WORKER_NAME
      node.vm.network "private_network", ip: BEGINN_MANAGER_WORKER_IPV4 + "." + "#{149+workerNumber}"
    end
  end

  ########################################################################
  # ++++++  Configuration of the machines and Provisioning   +++++++++++++
  ########################################################################
  # Create synced file
  node.vm.synced_folder ".", "/ansible_prov"
  node.vm.provider "virtualbox" do |v|
    # Memory
    v.memory = MEMORY_MANAGER
    # Number of CPU
    v.cpus = NUMBER_CPUS_MANAGER
  end
  # Use Ansible to provision the Managers
  node.vm.provision "ansible_local" do |ansible|
    # Define Ansible version
    ansible.compatibility_mode = "2.0"
    ansible.provisioning_path = "/ansible_prov"
    ansible.playbook = "provision/main-playbook.yml"
    # Use python 3
    ansible.extra_vars = { ansible_python_interpreter:"/usr/bin/python3" }
  end
end