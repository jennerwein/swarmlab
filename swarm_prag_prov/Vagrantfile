#!/usr/bin/env ruby

# We use a config file for user parameters.
configFile='./config.yml'
# In Ruby we need a YAML module to serialize the yaml string
require 'yaml'
getVar = YAML.load_file(configFile) 


BOX_IMAGE = "ubuntu/xenial64"
NUMBER_OF_NODES = getVar['NUMBER_OF_NODES']

Vagrant.configure("2") do |config|

  #########################################################################
  # Zuerst wird manager1 konfiguriert.
  # Er initiert das den Swarm und stellt das Join-Token zur Verfügung
  #########################################################################
  config.vm.define "manager1" do |subconfig|
    subconfig.vm.box = BOX_IMAGE
    subconfig.vm.hostname = "manager1"
    subconfig.vm.provider "virtualbox" do |vm|
      vm.memory = 768
      vm.cpus = 4
    end
    subconfig.vm.network "private_network", ip: "172.16.0.101/24"
    # Swarm initialisieren das Loin Kommando für die anderen manager 
    # im file .join-manager-cmd.txt bereitstellen.
    subconfig.vm.provision "ansible_local" do |ansible|
      ansible.compatibility_mode = "2.0" 
      # Swarm initialisieren und 
      ansible.playbook = "provision/swarm_init.yaml"    
    end
    # Script um Dockercontainer auf manager 1 zu starten
    subconfig.vm.provision "shell", path: "provision/start-services.sh"
  end

  (2..NUMBER_OF_NODES).each do |i|
    config.vm.define "manager#{i}" do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.hostname = "manager#{i}"
      subconfig.vm.provider "virtualbox" do |vm|
        vm.memory = 512
        vm.cpus = 2
      end
      subconfig.vm.network "private_network", ip: "172.16.0.#{100+i}/24"
      # Dem Schwarm beitreten
      subconfig.vm.provision "shell", path: "provision/swarm_join.sh"
    end
  end
  
  #######################################################################
  # Die folgenden Provisierungen werden für ALLE Maschinen durchgeführt.  
  #######################################################################
  # Da alles nur lokal läuft, wird der unsichere Schlüssel verwendet
  config.ssh.insert_key = false
  # Wichtige Folder in das Homeverzeichnis der sharen.
  config.vm.synced_folder "docker", "/home/vagrant/docker"
  config.vm.synced_folder "provision", "/home/vagrant/provision"
  config.vm.synced_folder "services", "/home/vagrant/services"
  # Basiskonfiguration mit Unix + Docker
  config.vm.provision "ansible_local" do |ansible|
    ansible.compatibility_mode = "2.0"
    ansible.playbook = "provision/basic-config.yaml"    
  end

end